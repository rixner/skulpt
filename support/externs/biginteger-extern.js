/**********************************************************************
 * Extern for bigInt
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/

/* modified from automatically generated output */

var bigInt = function () {};

bigInt.prototype = {
    "abs": function () {},
    "add": function () {},
    "and": function () {},
    "bitLength": function () {},
    "compare": function () {},
    "compareAbs": function () {},
    "compareTo": function () {},
    "divide": function () {},
    "divmod": function () {},
    "eq": function () {},
    "equals": function () {},
    "geq": function () {},
    "greater": function () {},
    "greaterOrEquals": function () {},
    "gt": function () {},
    "isDivisibleBy": function () {},
    "isEven": function () {},
    "isNegative": function () {},
    "isOdd": function () {},
    "isPositive": function () {},
    "isPrime": function () {},
    "isProbablePrime": function () {},
    "isUnit": function () {},
    "isZero": function () {},
    "leq": function () {},
    "lesser": function () {},
    "lesserOrEquals": function () {},
    "lt": function () {},
    "minus": function () {},
    "mod": function () {},
    "modInv": function () {},
    "modPow": function () {},
    "multiply": function () {},
    "negate": function () {},
    "neq": function () {},
    "next": function () {},
    "not": function () {},
    "notEquals": function () {},
    "or": function () {},
    "over": function () {},
    "plus": function () {},
    "pow": function () {},
    "prev": function () {},
    "remainder": function () {},
    "shiftLeft": function () {},
    "shiftRight": function () {},
    "square": function () {},
    "subtract": function () {},
    "times": function () {},
    "toArray": function () {},
    "toJSNumber": function () {},
    "toJSON": function () {},
    "toString": function () {},
    "value": {},
    "valueOf": function () {},
    "xor": function () {}
};
bigInt.fromArray = function () {};
bigInt.gcd = function () {};
bigInt.isInstance = function () {};
bigInt.lcm = function () {};
bigInt.max = function () {};
bigInt.min = function () {};
bigInt.randBetween = {};
bigInt.minusOne = {};
bigInt.one = {};
bigInt.zero = {};
/**********************************************************************
 * End Generated Extern for bigInt
/**********************************************************************/
