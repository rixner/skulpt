import pgen
import sys
out = """// generated by pgen/main.py
const token = require("../src/token.js");

Sk.OpMap = {
"(": token.tokens.T_LPAR,
")": token.tokens.T_RPAR,
"[": token.tokens.T_LSQB,
"]": token.tokens.T_RSQB,
":": token.tokens.T_COLON,
":=": token.tokens.T_COLONEQUAL,
",": token.tokens.T_COMMA,
";": token.tokens.T_SEMI,
"+": token.tokens.T_PLUS,
"-": token.tokens.T_MINUS,
"*": token.tokens.T_STAR,
"/": token.tokens.T_SLASH,
"|": token.tokens.T_VBAR,
"&": token.tokens.T_AMPER,
"<": token.tokens.T_LESS,
">": token.tokens.T_GREATER,
"=": token.tokens.T_EQUAL,
".": token.tokens.T_DOT,
"%": token.tokens.T_PERCENT,
"{": token.tokens.T_LBRACE,
"}": token.tokens.T_RBRACE,
"@": token.tokens.T_AT,
"@=": token.tokens.T_ATEQUAL,
"==": token.tokens.T_EQEQUAL,
"!=": token.tokens.T_NOTEQUAL,
"<>": token.tokens.T_NOTEQUAL,
"<=": token.tokens.T_LESSEQUAL,
">=": token.tokens.T_GREATEREQUAL,
"~": token.tokens.T_TILDE,
"^": token.tokens.T_CIRCUMFLEX,
"<<": token.tokens.T_LEFTSHIFT,
">>": token.tokens.T_RIGHTSHIFT,
"**": token.tokens.T_DOUBLESTAR,
"+=": token.tokens.T_PLUSEQUAL,
"-=": token.tokens.T_MINEQUAL,
"*=": token.tokens.T_STAREQUAL,
"/=": token.tokens.T_SLASHEQUAL,
"%=": token.tokens.T_PERCENTEQUAL,
"&=": token.tokens.T_AMPEREQUAL,
"|=": token.tokens.T_VBAREQUAL,
"^=": token.tokens.T_CIRCUMFLEXEQUAL,
"<<=": token.tokens.T_LEFTSHIFTEQUAL,
">>=": token.tokens.T_RIGHTSHIFTEQUAL,
"**=": token.tokens.T_DOUBLESTAREQUAL,
"//": token.tokens.T_DOUBLESLASH,
"//=": token.tokens.T_DOUBLESLASHEQUAL,
"->": token.tokens.T_RARROW,
"...": token.tokens.T_ELLIPSIS
};
""" + \
        pgen.generate_grammar().genjs()
open(sys.argv[1], "w").write(out)
